[gd_scene load_steps=7 format=3 uid="uid://onq0e03n2eh2"]

[ext_resource type="FontFile" uid="uid://q1kfaq4hjaog" path="res://Assets/Fonts/ThaleahFat.ttf" id="2_urmdh"]
[ext_resource type="AudioStream" uid="uid://c1vbenfvou76e" path="res://Assets/Music/BatSound.mp3" id="3_rcyi4"]

[sub_resource type="GDScript" id="GDScript_urmdh"]
script/source = "extends Node2D
class_name Cave

#to do: make hazards for bottomless pit and wumpus. Figure out what will
# happen when a player enters a hazard cave (all three). Coordinate with
# Emily for in game menu (riddles, etc). 

# the amount of gold the player gets for entering the cave
var roomGoldAmount = 0
# the caves the player can go into from this one
var connectingCaves: Array[Cave] = []
# the answer for the riddle and the cave the player 
# wants to go into
var bestOption = 0
# the number of the current cave
var currentCaveNumber = 0

# specialty caves that make it different than default

# will be a bat cave
var hasBat = false
# will be a wumpus cave
var hasWumpus = false
# will have a bottomless pit
var hasPit = false


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	# if game control sets this to bat cave start minigame
	if hasBat:
		pass
	
	# if game control sets this to wumpus cave start minigame
	if hasWumpus:
		pass
	
	# if game control sets this to pit cave start minigame
	if hasPit:
		pass


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass

# currentCave - the cave the player is in currently
# destination - the cave the player is trying to go to
func changeCaves(currentCave:Cave, destination:Cave):
	# if the destination has a connection to currentCave change caves
	if destination in currentCave.connectingCaves:
		updateCave(destination)
	# if the destination DOES NOT have a connection we can't change
	else:
		print(\"Cave is not accessible from current cave\")
		return

# change all of the attributes of the currentCave to our the cave the player
# is changing to
func updateCave(newCave:Cave):
	# updating attributes
	roomGoldAmount = newCave.roomGoldAmount
	connectingCaves = newCave.connectingCaves
	bestOption = newCave.bestOption
	currentCaveNumber = newCave.currentCaveNumber
	hasBat = newCave.hasBat
	hasWumpus = newCave.hasWumpus
	hasPit = newCave.hasPit
	
	# loops through the connecting caves and updates the numbers above the
	# cave entrances in the scene
	var i : int = 0
	for cave in connectingCaves:
		var path : String = str(i) + \"/CaveNumber\"
		get_node(path).text = currentCaveNumber
		i += 1
	
	
	# checking connecting caves for hazards to show ----
	
	# if there is a bat cave nearby, let the user know
	for cave in connectingCaves:
		if cave.hasBat:
			$BatSound.play()
			return
	
	# if there is a pit cave nearby, let the user know
	for cave in connectingCaves:
		if cave.hasPit:
			# figure out what should happen here -------------------------------
			return
	
	# if there is a wumpus cave nearby, let the user know
	for cave in connectingCaves:
		if cave.hasWumpus:
			# figure out what should happen here -------------------------------
			return
	

# if the player enters any of the 3 Area2D this runs
# it updates the text to the right number cave and shows it
func _on_area_entered(area: Area2D) -> void:
	print(\"entered\")
	$EnterCave.text = \"Press 'E' to enter cave \" + connectingCaves[int(area.name)].currentCaveNumber
	$EnterCave.visible = true

# if the player exists any of the 3 Area2D this runs
# it makes the text invisible again
func _on_area_exited(area: Area2D) -> void:
	$EnterCave.visible = false
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_twc2g"]

[sub_resource type="LabelSettings" id="LabelSettings_y8311"]
font = ExtResource("2_urmdh")
font_size = 18

[sub_resource type="LabelSettings" id="LabelSettings_rcyi4"]
font = ExtResource("2_urmdh")
font_size = 25

[node name="CaveDefault" type="Node2D"]
script = SubResource("GDScript_urmdh")

[node name="0" type="Area2D" parent="."]
position = Vector2(240, 459)
scale = Vector2(5.28, 5.08)

[node name="CollisionShape2D" type="CollisionShape2D" parent="0"]
shape = SubResource("RectangleShape2D_twc2g")

[node name="CaveNumber" type="Label" parent="0"]
texture_filter = 1
offset_left = -12.6894
offset_top = -70.8661
offset_right = 11.3106
offset_bottom = -47.8661
text = "1"
label_settings = SubResource("LabelSettings_y8311")
horizontal_alignment = 1
vertical_alignment = 1

[node name="1" type="Area2D" parent="."]
position = Vector2(576, 461)
scale = Vector2(5.28, 5.08)

[node name="CollisionShape2D" type="CollisionShape2D" parent="1"]
shape = SubResource("RectangleShape2D_twc2g")

[node name="CaveNumber" type="Label" parent="1"]
texture_filter = 1
offset_left = -11.235
offset_top = -70.866
offset_right = 12.765
offset_bottom = -47.866
text = "6"
label_settings = SubResource("LabelSettings_y8311")
horizontal_alignment = 1
vertical_alignment = 1

[node name="2" type="Area2D" parent="."]
position = Vector2(915, 462)
scale = Vector2(5.28, 5.08)

[node name="CollisionShape2D" type="CollisionShape2D" parent="2"]
shape = SubResource("RectangleShape2D_twc2g")

[node name="CaveNumber" type="Label" parent="2"]
texture_filter = 1
offset_left = -12.3106
offset_top = -71.063
offset_right = 11.6894
offset_bottom = -48.063
text = "7"
label_settings = SubResource("LabelSettings_y8311")
horizontal_alignment = 1
vertical_alignment = 1

[node name="EnterCave" type="Label" parent="."]
visible = false
texture_filter = 1
offset_left = 449.0
offset_top = 570.0
offset_right = 730.0
offset_bottom = 595.0
text = "Press 'E' to enter cave 25"
label_settings = SubResource("LabelSettings_rcyi4")

[node name="BatSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("3_rcyi4")

[node name="Label" type="Label" parent="."]
offset_right = 1152.0
offset_bottom = 23.0

[connection signal="area_entered" from="0" to="." method="_on_area_entered"]
[connection signal="area_exited" from="0" to="." method="_on_area_exited"]
[connection signal="area_entered" from="1" to="." method="_on_area_entered"]
[connection signal="area_exited" from="1" to="." method="_on_area_exited"]
[connection signal="area_entered" from="2" to="." method="_on_area_entered"]
[connection signal="area_exited" from="2" to="." method="_on_area_exited"]
